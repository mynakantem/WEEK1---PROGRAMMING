import java.util.HashSet;
import java.util.Random;
import java.util.Set;

public class OTPGenerator {

    public static int generateOTP() {
        return (int) (100000 + Math.random() * 900000); // Ensures a 6-digit OTP
    }

    public static int[] generateMultipleOTPs(int count) {
        int[] otps = new int[count];
        for (int i = 0; i < count; i++) {
            otps[i] = generateOTP();
        }
        return otps;
    }

    public static boolean areOTPsUnique(int[] otps) {
        Set<Integer> uniqueOTPs = new HashSet<>();
        for (int otp : otps) {
            uniqueOTPs.add(otp);
        }
        return uniqueOTPs.size() == otps.length; // If all elements are unique, return true
    }

    public static void main(String[] args) {
        int[] otpArray = generateMultipleOTPs(10); // Generate 10 OTPs

        System.out.println("Generated OTPs:");
        for (int otp : otpArray) {
            System.out.println(otp);
        }

        boolean isUnique = areOTPsUnique(otpArray);
        System.out.println("\nAre all OTPs unique? " + isUnique);
    }
}
